INCLUDE ANSWERS IN HERE

SOME OF THE QUESTIONS AND ANSWERS ARE FAIRLY SPECULATIVE, AS THE SYSTEM IS
ESSENTIALLY A GREYBOX: THERE ARE DIAGRAMS, SPECIFICATIONS, AND KNOWN PRACTICES,
BUT THE PRECISE IMPLEMENTATION IS OBSCURE.

*** TRANSFER RATES ***

1. Insert all benchmarking results here.

Without kernel driver
# Meas. #### WRITING ######### (U) USER SPACE (MB/s) ### (K) KERNEL SPACE (MB/s) #
#  1    #  8 BIT LOCAL ARRAY:           223.85                        -          #
#  2    # 16 BIT LOCAL ARRAY:           654.31                        -          #
#  3    # 32 BIT LOCAL ARRAY:          1183.71                        -          #
#  4    #  8 BIT ONCHIP ON FPGA:          6.69                       0.00        #
#  5    # 16 BIT ONCHIP ON FPGA:         13.50                       0.00        #
#  6    # 32 BIT ONCHIP ON FPGA:         26.79                       0.00        #
#  7    #  8 BIT MAPPED ARRAY:            8.89                       0.00        #
#  8    # 16 BIT MAPPED ARRAY:           17.71                       0.00        #
#  9    # 32 BIT MAPPED ARRAY:           63.87                       0.00        #
#  10   # 64 BIT DMA WRITER:               -                         0.00        #
# Meas. #### READING ######### (U) USER SPACE (MB/s) ### (K) KERNEL SPACE (MB/s) #
#  11   #  8 BIT LOCAL ARRAY:           254.64                        -          #
#  12   # 16 BIT LOCAL ARRAY:           356.41                        -          #
#  13   # 32 BIT LOCAL ARRAY:           498.88                        -          #
#  14   #  8 BIT ONCHIP ON FPGA:          7.33                       0.00        #
#  15   # 16 BIT ONCHIP ON FPGA:         14.63                       0.00        #
#  16   # 32 BIT ONCHIP ON FPGA:         29.18                       0.00        #
#  17   #  8 BIT MAPPED ARRAY:            7.42                       0.00        #
#  18   # 16 BIT MAPPED ARRAY:           14.83                       0.00        #
#  19   # 32 BIT MAPPED ARRAY:           29.58                       0.00        #
#  20   # 64 BIT DMA READER:               -                         0.00        #
##################################################################################

With kernel driver
##################################################################################
# Meas. #### WRITING ######### (U) USER SPACE (MB/s) ### (K) KERNEL SPACE (MB/s) #
#  1    #  8 BIT LOCAL ARRAY:           220.94                        -          #
#  2    # 16 BIT LOCAL ARRAY:           655.41                        -          #
#  3    # 32 BIT LOCAL ARRAY:          1173.05                        -          #
#  4    #  8 BIT ONCHIP ON FPGA:          6.71                      55.53        #
#  5    # 16 BIT ONCHIP ON FPGA:         13.51                     147.18        #
#  6    # 32 BIT ONCHIP ON FPGA:         26.79                     204.73        #
#  7    #  8 BIT MAPPED ARRAY:            8.97                     196.29        #
#  8    # 16 BIT MAPPED ARRAY:           17.96                     243.38        #
#  9    # 32 BIT MAPPED ARRAY:           63.75                     256.65        #
#  10   # 64 BIT DMA WRITER:               -                       418.68        #
# Meas. #### READING ######### (U) USER SPACE (MB/s) ### (K) KERNEL SPACE (MB/s) #
#  11   #  8 BIT LOCAL ARRAY:           259.55                        -          #
#  12   # 16 BIT LOCAL ARRAY:           356.41                        -          #
#  13   # 32 BIT LOCAL ARRAY:           490.12                        -          #
#  14   #  8 BIT ONCHIP ON FPGA:          7.33                      60.40        #
#  15   # 16 BIT ONCHIP ON FPGA:         14.63                     102.07        #
#  16   # 32 BIT ONCHIP ON FPGA:         29.17                     131.52        #
#  17   #  8 BIT MAPPED ARRAY:            7.43                     104.14        #
#  18   # 16 BIT MAPPED ARRAY:           14.82                     127.07        #
#  19   # 32 BIT MAPPED ARRAY:           29.57                     142.77        #
#  20   # 64 BIT DMA READER:               -                       373.80        #
##################################################################################


2. How fast were the DMA write and read measured by the application and how fast were they actually (show calculations and differences)? Give a reason for this?

	WRITE ON SIGNAL TAP: 811
	DIFFERENCE TO APPLICATION MEASUREMENT: 64*64 / (811/100M) = 505.06 => 505.06/418.68 = 1.2

	READ ON SIGNAL TAP: 915
	DIFFERENCE TO APPLICATION MEASUREMENT: 447.65 => 447.65/373.80 = 1.2
	
	REASON: Benchmarking application uses inaccurate DMA speed

3. Did you mark the measurement points to the hardware designs as instructed?
Yes

*** MEMORY ***

4. How much memory the operating system on ARM sees available? How much the ARM processor really has?

	MEMORY FOR ARM: 1 GiB
	MEMORY FOR OPERATING SYSTEM: 772796 kB

*** MIPS ***

5. What was the calculated MIPS of the FPGA and the virtual machine CPU?
INSERT THE COMPLETE CALCULATIONS! TELL THE USED FREQUENCY OF THE CPU!

	FPGA MIPS: 112 * 287M = 32 144 MIPS
	VIRTUAL MACHINE CPU MIPS: 1 * ( 3.40G / 3 ) = 1133 MIPS 

6. What was the measured MIPS of the ARM CPU and the virtual machine CPU?

	MEASURED ARM MIPS: 519 MIPS
	MEASURED VIRTUAL MACHINE CPU MIPS: 1190 MIPS

7. For CPUs, MIPS was measured in this exercise. Why this gives us a value differing from calculated MIPS?
	Processor frequency might change, possibly inaccurate measurements

8. What is probably the most important thing that the used MIPS measurements did not take into account?
HINT: We told you the answer in the instructions, but we are just making sure you understand.
	Memory transfers

*** SPECULATIVE FRAME RATE ***

9. How much were the speculative frame rates?
INSERT THE COMPLETE CALCULATIONS! TELL THE USED FRAME RATE!
VM frame rate = 0.76

	HARDWARE ACCELERATED FPS: 0.76 * (519 * 0.4 + 32144 * 0.6) / 1190 = 12.4
	PURE SOFTWARE FPS: 0.76 * 519 / 1190 = 0.33

10. Why did we assume that roughly 60% of the execution was on the FPGA rather than the ARM CPU?
HINT: Look at the profiling results of exercise 1, or instructions of exercise 3.
	Intra prediction is roughly 60% of execution, it will be HW accelerated
	
*** BOGOMIPS ***

11. What was the BogoMIPS of the ARM CPU andthe virtual machine CPU?

	ARM BOGO MIPS: 1594
	VIRTUAL MACHINE BOGO MIPS: 6816
	
12. Why BogoMIPS is not so good measurement for performance? Find out if you do not know.
	It measures time used in busy looping, not actual processing
	
*** KVAZAAR ON ARM ***
	
13. What was the processor utilization percentage and the memory usage of Kvazaar?

	PROCESSOR UTILIZATION: 50%
	MEMORY USAGE: 35 MB

14. How Kvazaar performed on the ARM CPU in comparison to work station? Do the profiling pictures look similar?
HINT: Compare the FPS to earlier exercises, since the CPU times are not comparable because of the frame limit.

	NON-PROFILING FPS: 0.07
	DIFFERENCE TO WORKSTATION: ( NON-PROFILING FPS / WORKSTATION FPS ) = 9.2%
	PROFILING FPS: 0.05
	ANALYSIS ON PICTURES: Similiar percentages, partial_butterfly_32_generic and kvz_angular_pred_generic are much higher percentages in VNC

15. How Kvazaar performed in comparison to the speculated software frame rate? What could be a reason for the difference?

	NON-PROFILING FPS: 0.07
	SPECULATED PURE SOFTWARE FPS: 0.33
	REASON: Much lower, only 50% processor usage, memory bottlenecking

16. What was hard? What was easy?
	Not too hard, good instructions, finding sticky notes in Kactus was hard, could add instructions

17. Fill the used hours below, including answering questions and any downtime:

	GROUP MEMBER 1: 252844: 4.5h
	GROUP MEMBER 2: 274301: 4.5h